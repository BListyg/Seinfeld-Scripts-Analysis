---
title: 'Assignment #4'
author: "Kai Middlebrook"
date: "`r format(Sys.time(), '%B %d, %Y')`"
output:
  html_document:
    df_print: paged
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(fig.width = 5.5, fig.height= 3)
```

```{r libraries, include = F, message=FALSE, warning=FALSE}
rm(list = ls())
cat('\014')
library(tidyverse)
library(hflights)
library(magrittr)
library(scales)
library(reshape2)
library(gcookbook)
```

**Instructions**: Submit both `Rmd` and knitted `pdf` files to Canvas by the due date and time. All grapsh must be produced in `ggplot2`. Be careful to make your graphs look as identical as possible to the ones provided in the homework, including axis ticks, axis labels, and formatting.

## Question 1

```{r, include = F}
myflights <- hflights
myflights$Month <-  factor(myflights$Month,
                           labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                                      "Aug", "Sep", "Oct", "Nov", "Dec"))
myflights$Origin <- factor(myflights$Origin,
                           labels = c("HOU", "IAH"))
```

The `hflights` package contains a dataset named `hflights`, which provides information on `r format(nrow(myflights), big.mark = ",")` flights in 2011 leaving from Houston-based airports. How many flights departed per month? From IAH? From HOU? Create the following charts.

\ 

\ 

(a) Generate a bar graph with `Origin` on the x-axis, `Frequency` on the y-axis, by `Month`.
```{r}
myflights %>% 
  ggplot() +
  geom_bar(aes(x = Origin, group = Month, fill = Month), position = "dodge", alpha = 0.7) +
  scale_y_continuous(name = "Frequency", labels = comma) +
  scale_fill_brewer(palette = "Set3")
```

\ 

(b) Generate a bar graph with `Month` on the x-axis, `Frequency` on the y-axis, by `Origin`.
```{r}
myflights %>% 
  ggplot() +
  geom_bar(aes(x = Month, group = Origin, fill = Origin),
           position = "dodge") +
  scale_y_continuous(name = "Frequency", labels = comma) 
```
  
(c) Generate a line graph with `Month` on the x-axis, `Frequency` on the y-axis, by `Origin`.
```{r}
myflights %>% 
  group_by(Month, Origin) %>% 
  summarise(Frequency = n()) %>% 
  ggplot() +
  geom_line(aes(x = Month, y = Frequency, group = Origin, color = Origin)) +
  geom_point(aes(x = Month, y = Frequency, group = Origin, color = Origin), size = 4.5,
             alpha = .5) +
  scale_color_manual(values = c("HOU" = "turquoise", "IAH" = "red")) +
  scale_y_continuous(labels = comma)
```


(d) Generate a line graph with `Month` on the x-axis, `Frequency` on the y-axis, by `Origin`, and include a `dotted` horizontal line indicating the mean `Frequency` for each `Origin`, using a minimalist `theme`.
```{r}
meanIAH <- myflights %>% 
  select(Month, Origin) %>% 
  filter(Origin == "IAH") %>% 
  group_by(Month) %>% 
  count() %>% 
  ungroup() %>% 
  mutate(meanIAH = mean(n, na.rm = T))

meanHOU <- myflights %>%
  select(Month, Origin) %>% 
  filter(Origin == "HOU") %>% 
  group_by(Month) %>% 
  count() %>% 
  ungroup() %>% 
  mutate(meanHOU = mean(n, na.rm = T))


myflights %>% 
  group_by(Month, Origin) %>% 
  summarise(Frequency = n()) %>% 
  ggplot() + 
  geom_line(aes(x = Month, y = Frequency, group = Origin, color = Origin)) +
  geom_point(aes(x = Month, y = Frequency, group = Origin, color = Origin),
             size = 4.5, alpha = .5) +
  scale_color_manual(values = c("HOU" = "turquoise", "IAH" = "red")) +
  scale_y_continuous(labels = comma) +
  geom_hline(yintercept = meanIAH$meanIAH, linetype = "dotted") +
  geom_hline(yintercept = meanHOU$meanHOU, linetype = "dotted") +
  theme_minimal()
```

## Question 2

The `gcookbook` package contains a dataset named `uspopchange`, which provides information on recent population changes in US States. We are interested in graphing the chnage in population across all states. Create the following graphs.
```{r}
myuspopchange <- uspopchange
myuspopchange$State <-  as.factor(myuspopchange$State)
myuspopchange$Abb <- as.factor(myuspopchange$Abb)
```


(a) Generate a bar graph with `State` on the x-axis, `PercentChange` on the y-axis.
```{r}
myuspopchange %>% 
  mutate(Change = Change / 100) %>% 
  ggplot() +
  geom_bar(aes(x = State, y = Change), stat = "identity", position = "dodge") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  scale_y_continuous(labels = percent) +
  ylab("% Percent Change")
```


(b) Generate a bar graph with `Region` on the x-axis, `PercentChange` on the y-axis, by `State`.
```{r}
myuspopchange %>% 
  mutate(Change = Change / 100) %>% 
  ggplot() +
  geom_bar(aes(x = Region, y = Change, group = State, fill = Abb), stat = "identity",
           position = "dodge") +
  scale_y_continuous(name = "% Percent Change", labels = percent)
```
(c) Generate a bar graph with `Region` on the x-axis, ordered `PercentChange` on the y-axis, by `State`, but do not include a legend.
```{r}
mycolors <- brewer_pal(palette = "Set1")

myuspopchange %>% 
  mutate(PercentChange = Change / 100,
         State = reorder(State, PercentChange)) %>%
  ggplot() +
  geom_bar(aes(x = Region, y = PercentChange, group = State, fill = State),
           stat = "identity", position = "dodge") +
  theme(legend.position = "none") +
  scale_y_continuous(name = "% Percent Change", labels = percent) +
  scale_fill_discrete()

```


## Question 3

Import the data set `mlb_01.csv` from the course DropBox folder. 
```{r warning=FALSE, message=FALSE}
mymlb_01 <- read_csv("mlb_01.csv")
mymlb_01$League <- as.factor(mymlb_01$League)
mymlb_01$Position.Name <- as.factor(mymlb_01$Position.Name)
```

(a) Generate a boxplot, with `Position.Name` on the x-axis, `Salary` in millions of dollars on the y-axis, and include, for each `Position.Name`, a marker indicating the mean `Salary`.
```{r}
mymlb_01 %>% 
  group_by(Position.Name) %>% 
  mutate(meanPosition = mean(Salary, na.rm = T)) %>% 
  ggplot() +
  geom_boxplot(aes(x = Position.Name, y = Salary)) +
  geom_point(aes(x = Position.Name, y = meanPosition), shape = 10, size = 5, colour = "green") +
  scale_y_continuous(name = "Salary ($M)", labels = function(x) x/1000000) +
  xlab("Position")
```

(b) Generate a sactter plot, with `Position.Name` on the x-axis, `Salary` in millions of dollars on the y-axis, and include, red `labels` for all Japanese players and blue `labels` for all Dominican players.
```{r}
mymlb_01 %>% 
  mutate(label_color = ifelse(Japanese > 0, "red",
                              ifelse(Dominican > 0, "blue", "white"))) %>%  
  ggplot() +
  geom_point(aes(x = Position.Name, y = Salary, size = 2, alpha = .2), show.legend = F) +
  geom_label(aes(x = Position.Name, y = Salary, label = ifelse(label_color != "white", Player, ""),
                 colour = ifelse(label_color != "white", label_color, "")), show.legend = F) +
  scale_y_continuous(name = "Salary ($M)", labels = function(x) x/1000000) +
  xlab("Position")
```

## Question 4

Generate fictional customer purchase data for a company, including year of purchase, continent, gender, and amount each individual customer spent. Data is generated using the following code:

```{r, echo = T}
set.seed(1000)
myDF <- data.frame(
  year = factor(sample(2010:2014, 400, replace = T)), 
  continent = factor(sample(c("EU", "US", "Asia"), 400, replace = T)),
  Gender = factor(sample(c("Male", "Female"), 400, replace = T)),
  amount = sample(20:5000, 400, replace = T)
)
```

Create a stacked bar graph, with `year` on the x-axis, `totalYearlyPurcases` on the y-axis, by `Gender`.
```{r}
myDF %>% 
  select(year, Gender, amount) %>% 
  group_by(year, Gender) %>% 
  summarise(totalYearlyPurchasesByGender = sum(amount)) %>% 
  ungroup() %>% 
  group_by(year) %>% 
  mutate(totalYearlyPurchases = sum(totalYearlyPurchasesByGender)) %>% 
  ggplot() +
  geom_bar(aes(x = year, y = totalYearlyPurchases, group = Gender, fill = Gender), stat = "identity",
           alpha = 0.6) +
  scale_y_continuous(name = "Total Purchases", label = dollar_format(prefix = "$")) +
  xlab("Year")
```


## Question 5

Generate fictional stock data including `year` and `stockPrice` using the following code:

```{r, echo = T}
set.seed(99)
myDF <- data.frame(
  year = sample(1965:2015, 10000, replace = T), 
  stockPrice = rnorm(10000, 10, 2)
)
```

Generate a line graph with the mean `stockPrice` per `year` on the y-axis, the `year` on the x-axis, and include a `ribbon` that outlines the `min` and `max` `stockPrice` for a given year. 

```{r}
myDF %>% 
  group_by(year) %>% 
  mutate(meanStockPriceByYear = mean(stockPrice, na.rm = T),
         maxPriceByYear = max(stockPrice, na.rm = T),
         minPriceByYear = min(stockPrice, na.rm = T)) %>% 
  ggplot() +
  geom_ribbon(aes(x = year, ymin = minPriceByYear, ymax = maxPriceByYear), alpha = 0.4) +
  geom_line(aes(x = year, y = meanStockPriceByYear), colour = "blue") +
  scale_x_continuous(name = "Year", breaks = seq(1965, 2015, by = 5)) +
  scale_y_continuous(name = "Mean Yearly Stock Price", labels = dollar_format(prefix = "$"))
  
```

## BONUS Question (+50%)

Import the data set `cpi2017.csv` from the course DropBox folder. This is a data set that contains an aggregate measure of perceived corruption for each country, with a low score being worse. Generate a scatter plot with `Country` on the x-axis (I know it is actually on the y-axis, but think about this for a seccond...), `CPI Score 2017` on the y-axis, and include a `ribbon` indicating the Lower and Upper CI.

**n.b.** Once you have completely finished all the previous homework problems, come and see me for hints and tips about how to solve this problem.

```{r message=FALSE, warning=FALSE}
mycpi2017 <- read_csv("cpi2017.csv") 
mycpi2017 <- mycpi2017 %>% 
  mutate(`CPI\ Score\ 2017` = as.numeric(`CPI\ Score\ 2017`),
         `Lower\ CI\ 2017` = as.numeric(`Lower\ CI\ 2017`),
         `Upper\ CI\ 2017` = as.numeric(`Upper\ CI\ 2017`),
         Country = reorder(Country, `CPI\ Score\ 2017`))
         

mycpi2017 %>% 
  ggplot() +
  geom_ribbon(aes(x = Country, ymin = `Lower\ CI\ 2017`, ymax = `Upper\ CI\ 2017`, fill = "blue"), 
              show.legend = F) +
  geom_point(aes(x = Country, y = `CPI\ Score\ 2017`)) +
  scale_y_continuous(name = "2017 CPI Score", breaks = seq(25, 95, by = 5)) +
  xlab("Country") +
  coord_flip()
```





